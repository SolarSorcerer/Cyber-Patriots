# Ensure the script is run as an administrator
$currentUser = [Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()
if (-Not ($currentUser.IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator"))) {
    Write-Host "This script must be run as an administrator." -ForegroundColor Red
    exit
}

# Function to configure password policy
function Set-PasswordPolicy {
    # Set Minimum Password Length
    net accounts /minpwlen:12
    
    # Set Password History Length
    net accounts /uniquepw:24
    
    # Set Maximum Password Age
    net accounts /maxpwage:60
    
    # Set Minimum Password Age
    net accounts /minpwage:1
    
    # Enable Password Complexity
    secedit /export /cfg C:\secpol.cfg
    ((Get-Content -path C:\secpol.cfg -Raw) -replace "PasswordComplexity = 0", "PasswordComplexity = 1") | Set-Content -Path C:\secpol.cfg
    secedit /configure /db C:\windows\security\local.sdb /cfg C:\secpol.cfg /areas SECURITYPOLICY
    Remove-Item C:\secpol.cfg
    
    Write-Host "Password policy has been hardened." -ForegroundColor Green
}

# Execute the function to set the password policy
Set-PasswordPolicy
